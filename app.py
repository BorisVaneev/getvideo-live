from flask import Flask, render_template, request, redirect, url_for, send_file, Response
import http.client
import json
import requests
import traceback  # –î–ª—è –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫

app = Flask(__name__)

RAPIDAPI_KEY = "aa3d356f13msh3974bc1b6659014p111df9jsn9a452dae36bc"
RAPIDAPI_HOST = "auto-download-all-in-one.p.rapidapi.com"

ALL_SERVICES = {
    "page1": ["instagram", "tiktok", "facebook", "twitter", "youtube", "reddit", "vimeo"],
    "page2": ["reddit", "linkedin", "pinterest", "tumblr", "vimeo", "soundcloud", "spotify"],
    "page3": ["soundcloud", "spotify", "mixcloud", "bandcamp", "zingmp3", "vimeo", "youtube"],
    "page4": ["douyin", "kuaishou", "xiaohongshu", "ixigua", "meipai", "twitter", "vimeo"],
    "page5": ["snapchat", "dailymotion", "sharechat", "likee", "linkedin", "tumblr", "9gag"]
}

SERVICES = {
    "ru": ALL_SERVICES,
    "en": ALL_SERVICES,
    "es": ALL_SERVICES,
    "zh": ALL_SERVICES
}

@app.route('/')
def index():
    print("üü¢ –û—Ç–∫—Ä—ã—Ç–∞ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ /")
    return render_template("index.html")

# –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
for lang, pages in SERVICES.items():
    for page, services in pages.items():
        route = f"/{lang}/{page}"
        def make_view(p=page, s=services, l=lang):
            def view():
                print(f"üü¢ –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: /{l}/{p} ‚Äî —Å–µ—Ä–≤–∏—Å—ã: {s}")
                return render_template("seo_page.html", services=s, lang=l, page=p)
            return view
        app.add_url_rule(route, f"{lang}_{page}", make_view())

@app.route('/download', methods=['POST'])
def download():
    video_url = request.form.get('url')
    print(f"üì• –ü–æ–ª—É—á–µ–Ω URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: {video_url}")

    if not video_url:
        print("‚ùå URL –Ω–µ —É–∫–∞–∑–∞–Ω!")
        return "URL –Ω–µ —É–∫–∞–∑–∞–Ω", 400

    try:
        conn = http.client.HTTPSConnection(RAPIDAPI_HOST)
        payload = json.dumps({"url": video_url})
        headers = {
            'x-rapidapi-key': RAPIDAPI_KEY,
            'x-rapidapi-host': RAPIDAPI_HOST,
            'Content-Type': 'application/json'
        }

        print("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ RapidAPI...")
        conn.request("POST", "/v1/social/autolink", payload, headers)
        res = conn.getresponse()
        data = res.read()
        print(f"üì® –û—Ç–≤–µ—Ç –æ—Ç RapidAPI: {data[:500]}...")  # –æ–≥—Ä–∞–Ω–∏—á–∏–º –≤—ã–≤–æ–¥

        result = json.loads(data)
        return render_template("result.html", result=result)

    except Exception as e:
        print("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:")
        traceback.print_exc()
        return f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"

@app.route('/download_video', methods=['GET'])
def download_video():
    video_url = request.args.get('url')
    print(f"üì• –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –ø–æ URL: {video_url}")

    try:
        response = requests.get(video_url, stream=True)
        if response.status_code == 200:
            print("‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
            headers = {
                'Content-Disposition': 'attachment; filename="video.mp4"',
                'Content-Type': 'video/mp4',
            }
            return Response(response.iter_content(chunk_size=1024), headers=headers)

        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ. –ö–æ–¥: {response.status_code}")
        return "Error: Could not fetch video", 400
    except Exception as e:
        print("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ:")
        traceback.print_exc()
        return f"–û—à–∏–±–∫–∞: {e}", 500

if __name__ == '__main__':
    app.run(debug=True)
